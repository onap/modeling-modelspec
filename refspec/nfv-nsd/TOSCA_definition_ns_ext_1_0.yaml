#
# Copyright 2017 ZTE Corporation.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

tosca_definitions_version: tosca_simple_yaml_1_0

description: Extend types definitions file for tosca-nfv.
  
data_types:
  tosca.datatypes.nfv.ext.FPPolicyCriteria:
    derived_from: tosca.datatypes.Root
    properties:
      dest_port_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      source_port_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      ip_protocol:
        type: string
        required: false
        default: tcp
        constraints:
          - valid_values: [ udp, tcp ]
      dest_ip_range:
        type: list
        required: false
        description: The format is startip1-endip1,startip2-endip2
        entry_schema:
          type: string
      source_ip_range:
        type: list
        required: false
        description: The format is startip1-endip1,startip2-endip2
        entry_schema:
          type: string
      dscp:
        type: integer
        required: false

  tosca.datatypes.nfv.ext.FPPolicy:
    derived_from: tosca.datatypes.Root
    properties:
      type:
        type: string
        required: false
        default: ACL
        constraints:
          - valid_values: [ ACL ]
      criteria:
        type: tosca.datatypes.nfv.ext.FPPolicyCriteria
        required: true
        

node_types:
  tosca.nodes.nfv.ext.VNF:
    derived_from: tosca.nodes.nfv.VNF
    properties:
      vnf_type:
        type: string
        required: false
        description: Type of this VNF. For example MME,USPP,xGW etc.
      request_reclassification:
        type: boolean
        required: false
        default: false
        description: Determines whether VNF can request reclassification by the VNF forwarder
      nsh_aware:
        type: boolean
        required: false
        default: true
        description: Whether this VNF can process NSH headers
      vnfm_type:
        type: string
        required: true
        description: Type of this VNFM, Such as ZTE,HW,JUJU,...
    requirements:
      - virtual_link:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [0, UNBOUNDED]

  tosca.nodes.nfv.ext.CP:
    derived_from: tosca.nodes.nfv.CP
    properties:
      sfc_encapsulation:
        type: string
        required: false
        description: The encapsulateion used to carry NSH packages
        constraints:
          - valid_values: [ mac, vxlan-gpe, gre, mpls ]
      direction:
        type: string
        required: false
        constraints:
          - valid_values: [ input, output, bidirectional ]
      interface_name:
        type: string
        required: false
        description: Physical interface name of CP for PNF.
    requirements:
      - link:
          capability: tosca.capabilities.network.Linkable
          relationship: tosca.relationships.network.LinksTo
          occurrences: [ 0, 1 ]
      - binding:
          capability: tosca.capabilities.network.Bindable
          relationship: tosca.relationships.network.BindsTo
          occurrences: [ 0, 1 ]
      - virtualLink:
          capability: tosca.capabilities.nfv.VirtualLinkable
          relationship: tosca.relationships.nfv.VirtualLinksTo
          occurrences: [ 0, 1 ]
      - virtualbinding:
          capability: tosca.capabilities.nfv.VirtualBindable
          relationship: tosca.relationships.nfv.VirtualBindsTo
          occurrences: [ 0, 1 ]
    capabilities:
      forwarder: 
        type: tosca.capabilities.nfv.Forwarder

  tosca.nodes.nfv.ext.NS:
    derived_from: tosca.nodes.Root
    properties:
      id:
        type: string
        description: ID of this NSD
        required: true
        constraints:
          - min_length: 1
      designer:
        type: string
        description: Designer of this NSD
        required: true
      version:
        type: version
        description: version of this NSD
        required: true
      name:
        type: string
        description: name of this NSD
        required: true
      type:
        type: string
        description: Type of this NSD,include:SSAR,NSAR,GSAR
        required: true
    requirements:
      - virtualLink:
          capability: tosca.capabilities.nfv.VirtualLinkable
          node: tosca.nodes.nfv.VL
          relationship: tosca.relationships.nfv.VirtualLinksTo

  tosca.nodes.nfv.ext.PNF:
    derived_from: tosca.nodes.Root
    properties:
      id:
        type: string
        description: ID of this PNF
        required: true
        constraints:
          - min_length: 1
      vendor:
        type: string
        description: name of the vendor who provide this PNF
        required: true
      version:
        type: version
        description: version of the software for this PNF
        required: true
      pnf_type:
        type: string
        description: type of PNF
        required: false
      request_reclassification:
        type: boolean
        required: false
        default: false
        description: Determines whether VNF can request reclassification by the VNF forwarder
      nsh_aware:
        type: boolean
        required: false
        default: true
        description: Whether this VNF can process NSH headers
      management_address:
        type: string
        description: Management port address of this PNF.
        required: true
    capabilities:
      virtualBinding:
        type: tosca.capabilities.nfv.VirtualBindable

  tosca.nodes.nfv.ext.FP:
    derived_from: tosca.nodes.Root
    properties:
      policy:
        type: tosca.datatypes.nfv.ext.FPPolicy
        required: false
      symmetric:
        type: boolean
        required: false
        description: If the chain is symmetric, SDN Controller will create two service paths, one ingress and another egress.
    requirements:
      - forwarder:
          capability: tosca.capabilities.nfv.Forwarder
          occurrences: [0, UNBOUNDED]

group_types:
  tosca.groups.nfv.ext.VNFFG:
    derived_from: tosca.groups.nfv.VNFFG
    properties:
      constituent_pnfs:
        type: list
        entry_schema:
          type: string
        required: false
        description: Reference to a list of PNF'ID used in this VNF Forwarding Graph
